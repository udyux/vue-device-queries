{"version":3,"file":"vue-device-queries.js","sources":["src/device.js","src/handler.js","src/match-media.js","src/index.js"],"sourcesContent":["export default () => {\n  const node = document.createElement('div')\n  const style = document.createElement('style')\n\n  node.id = 'match-media-node'\n  style.innerHTML = `#match-media-node {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    bottom: 100%;\n    overflow: scroll;\n  }`\n\n  document.head.appendChild(style)\n  document.body.insertBefore(node, document.body.children[0])\n\n  return {\n    get width() {\n      return node.clientWidth\n    },\n    get height() {\n      return node.clientHeight\n    },\n    get orientation() {\n      return (node.clientHeight > node.clientWidth)\n        ? 'portrait'\n        : 'landscape'\n    },\n    get fontSize() {\n      return window\n        .getComputedStyle(document.documentElement)\n        .getPropertyValue('font-size')\n    }\n  }\n}\n","export default (feature, value, device) => {\n  if (feature === 'orientation') return () => value === device.orientation\n\n  let [prop, limit] = feature.split('-').reverse()\n\n  const parseValue = (~value.indexOf('em'))\n    ? () => parseFloat(value) * device.fontSize\n    : () => parseFloat(value)\n\n  return (!limit) ? () => parseValue() === device[prop]\n    : (limit === 'min') ? () => parseValue() < device[prop]\n    : () => parseValue() > device[prop]\n}\n","import createDevice from './device'\nimport createHandler from './handler'\n\n// match media fallback using resize event\nconst matchMediaFallback = () => {\n  let listeners = []\n  let idle = true\n\n  const device = createDevice()\n\n  const parseQuery = (queryString) => {\n    let [feature, value] = queryString.replace(/[()\\s]/g, '').split(':')\n    return createHandler(feature, value, device)\n  }\n\n  window.addEventListener('resize', () => {\n    // back out if window is still resizing\n    if (!idle) return;\n    idle = false\n\n    let width = device.width\n    let height = device.height\n\n    let timer = setInterval(() => {\n      if (width !== device.width || height !== device.height) {\n        // still resizing, update sizes\n        width = device.width\n        height = device.height\n      } else {\n        // cancel the timer and call each handler\n        clearTimeout(timer)\n        listeners.forEach(handler => handler())\n        idle = true\n      }\n    }, 60)\n  })\n\n  return function(queryString) {\n    const query = parseQuery(queryString)\n\n    // return object must replicate native matchMedia API\n    return {\n      get matches() {\n        return query()\n      },\n      addListener(responder) {\n        listeners.push(() => responder(this))\n      }\n    }\n  }\n}\n\nconst matchMedia = window.matchMedia || matchMediaFallback()\n\nexport { matchMedia as default }\n","import matchMedia from './match-media'\n\nexport default {\n  install(Vue, queries) {\n    // reactive store for media-queries\n    const DeviceVM = new Vue({\n      data() {\n        return {\n          devices: {}\n        }\n      },\n\n      methods: {\n        addDevice(name, active) {\n          this.$set(this.devices, name, active)\n\n          return ({ matches }) => {\n            this.devices[name] = matches\n          }\n        }\n      }\n    })\n\n    Object.keys(queries).forEach(name => {\n      let query = matchMedia(`(${queries[name]})`)\n      let update = DeviceVM.addDevice(name, query.matches)\n      query.addListener(update)\n    })\n\n    // only make device states available app wide\n    Vue.prototype.$device = DeviceVM.devices\n  }\n}\n"],"names":["node","document","createElement","style","id","innerHTML","head","appendChild","body","insertBefore","children","width","clientWidth","height","clientHeight","orientation","fontSize","window","getComputedStyle","documentElement","getPropertyValue","feature","value","device","split","reverse","prop","limit","parseValue","indexOf","parseFloat","matchMediaFallback","listeners","idle","createDevice","parseQuery","queryString","replace","createHandler","addEventListener","timer","setInterval","forEach","handler","query","matches","responder","push","matchMedia","Vue","queries","DeviceVM","name","active","$set","devices","keys","update","addDevice","addListener","prototype","$device"],"mappings":"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"}